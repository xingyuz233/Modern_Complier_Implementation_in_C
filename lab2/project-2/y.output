State 1 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 99 conflicts: 12 shift/reduce
State 107 conflicts: 13 shift/reduce
State 108 conflicts: 12 shift/reduce
State 134 conflicts: 12 shift/reduce
State 135 conflicts: 12 shift/reduce
State 151 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: varExp
    3    | nilExp
    4    | intExp
    5    | stringExp
    6    | callExp
    7    | opExp
    8    | recordExp
    9    | seqExp
   10    | assignExp
   11    | ifExp
   12    | whileExp
   13    | forExp
   14    | breakExp
   15    | letExp
   16    | arrayExp

   17 varExp: var

   18 nilExp: NIL

   19 intExp: INT

   20 stringExp: STRING

   21 callExp: ID LPAREN argList RPAREN

   22 opExp: exp PLUS exp
   23      | exp MINUS exp
   24      | exp TIMES exp
   25      | exp DIVIDE exp
   26      | exp EQ exp
   27      | exp NEQ exp
   28      | exp LT exp
   29      | exp LE exp
   30      | exp GT exp
   31      | exp GE exp
   32      | MINUS exp

   33 recordExp: ID LBRACE efieldList RBRACE

   34 seqExp: LPAREN expList RPAREN

   35 assignExp: var ASSIGN exp

   36 ifExp: IF exp THEN exp ELSE exp
   37      | IF exp THEN exp
   38      | exp AND exp
   39      | exp OR exp

   40 whileExp: WHILE exp DO exp

   41 forExp: FOR ID ASSIGN exp TO exp DO exp

   42 breakExp: BREAK

   43 letExp: LET decList IN expList END

   44 arrayExp: ID LBRACK exp RBRACK OF exp

   45 var: ID
   46    | var DOT ID
   47    | var LBRACK exp RBRACK
   48    | ID LBRACK exp RBRACK

   49 argList: /* empty */
   50        | exp
   51        | exp COMMA argList

   52 efieldList: /* empty */
   53           | efield
   54           | efield COMMA efieldList

   55 expList: /* empty */
   56        | exp
   57        | exp SEMICOLON expList

   58 decList: dec
   59        | dec decList

   60 efield: ID EQ exp

   61 dec: functionDec
   62    | varDec
   63    | typeDec

   64 functionDec: fundecList

   65 varDec: VAR ID ASSIGN exp
   66       | VAR ID COLON ID ASSIGN exp

   67 typeDec: nametyList

   68 fundecList: fundec
   69           | fundec fundecList

   70 nametyList: namety
   71           | namety nametyList

   72 fundec: FUNCTION ID LPAREN fieldList RPAREN EQ exp
   73       | FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp

   74 namety: TYPE ID EQ nameTy
   75       | TYPE ID EQ recordTy
   76       | TYPE ID EQ arrayTy

   77 fieldList: /* empty */
   78          | field
   79          | field COMMA fieldList

   80 nameTy: ID

   81 recordTy: LBRACE fieldList RBRACE

   82 arrayTy: ARRAY OF ID

   83 field: ID COLON ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 21 33 41 44 45 46 48 60 65 66 72 73 74 75 76 80 82 83
STRING (259) 20
INT (260) 19
COMMA (261) 51 54 79
COLON (262) 66 73 83
SEMICOLON (263) 57
LPAREN (264) 21 34 72 73
RPAREN (265) 21 34 72 73
LBRACK (266) 44 47 48
RBRACK (267) 44 47 48
LBRACE (268) 33 81
RBRACE (269) 33 81
DOT (270) 46
PLUS (271) 22
MINUS (272) 23 32
TIMES (273) 24
DIVIDE (274) 25
EQ (275) 26 60 72 73 74 75 76
NEQ (276) 27
LT (277) 28
LE (278) 29
GT (279) 30
GE (280) 31
AND (281) 38
OR (282) 39
ASSIGN (283) 35 41 65 66
ARRAY (284) 82
IF (285) 36 37
THEN (286) 36 37
ELSE (287) 36
WHILE (288) 40
FOR (289) 41
TO (290) 41
DO (291) 40 41
LET (292) 43
IN (293) 43
END (294) 43
OF (295) 44 82
BREAK (296) 42
NIL (297) 18
FUNCTION (298) 72 73
VAR (299) 65 66
TYPE (300) 74 75 76


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
exp (48)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 1 22 23
    24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 47 48 50 51
    56 57 60 65 66 72 73
varExp (49)
    on left: 17, on right: 2
nilExp (50)
    on left: 18, on right: 3
intExp (51)
    on left: 19, on right: 4
stringExp (52)
    on left: 20, on right: 5
callExp (53)
    on left: 21, on right: 6
opExp (54)
    on left: 22 23 24 25 26 27 28 29 30 31 32, on right: 7
recordExp (55)
    on left: 33, on right: 8
seqExp (56)
    on left: 34, on right: 9
assignExp (57)
    on left: 35, on right: 10
ifExp (58)
    on left: 36 37 38 39, on right: 11
whileExp (59)
    on left: 40, on right: 12
forExp (60)
    on left: 41, on right: 13
breakExp (61)
    on left: 42, on right: 14
letExp (62)
    on left: 43, on right: 15
arrayExp (63)
    on left: 44, on right: 16
var (64)
    on left: 45 46 47 48, on right: 17 35 46 47
argList (65)
    on left: 49 50 51, on right: 21 51
efieldList (66)
    on left: 52 53 54, on right: 33 54
expList (67)
    on left: 55 56 57, on right: 34 43 57
decList (68)
    on left: 58 59, on right: 43 59
efield (69)
    on left: 60, on right: 53 54
dec (70)
    on left: 61 62 63, on right: 58 59
functionDec (71)
    on left: 64, on right: 61
varDec (72)
    on left: 65 66, on right: 62
typeDec (73)
    on left: 67, on right: 63
fundecList (74)
    on left: 68 69, on right: 64 69
nametyList (75)
    on left: 70 71, on right: 67 71
fundec (76)
    on left: 72 73, on right: 68 69
namety (77)
    on left: 74 75 76, on right: 70 71
fieldList (78)
    on left: 77 78 79, on right: 72 73 79 81
nameTy (79)
    on left: 80, on right: 74
recordTy (80)
    on left: 81, on right: 75
arrayTy (81)
    on left: 82, on right: 76
field (82)
    on left: 83, on right: 78 79


state 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program    go to state 12
    exp        go to state 13
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 1

   21 callExp: ID . LPAREN argList RPAREN
   33 recordExp: ID . LBRACE efieldList RBRACE
   44 arrayExp: ID . LBRACK exp RBRACK OF exp
   45 var: ID .
   48    | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 30
    LBRACK  shift, and go to state 31
    LBRACE  shift, and go to state 32

    LBRACK    [reduce using rule 45 (var)]
    $default  reduce using rule 45 (var)


state 2

   20 stringExp: STRING .

    $default  reduce using rule 20 (stringExp)


state 3

   19 intExp: INT .

    $default  reduce using rule 19 (intExp)


state 4

   34 seqExp: LPAREN . expList RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 55 (expList)

    exp        go to state 33
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29
    expList    go to state 34


state 5

   32 opExp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 35
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 6

   36 ifExp: IF . exp THEN exp ELSE exp
   37      | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 36
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 7

   40 whileExp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 37
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 8

   41 forExp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 38


state 9

   43 letExp: LET . decList IN expList END

    FUNCTION  shift, and go to state 39
    VAR       shift, and go to state 40
    TYPE      shift, and go to state 41

    decList      go to state 42
    dec          go to state 43
    functionDec  go to state 44
    varDec       go to state 45
    typeDec      go to state 46
    fundecList   go to state 47
    nametyList   go to state 48
    fundec       go to state 49
    namety       go to state 50


state 10

   42 breakExp: BREAK .

    $default  reduce using rule 42 (breakExp)


state 11

   18 nilExp: NIL .

    $default  reduce using rule 18 (nilExp)


state 12

    0 $accept: program . $end

    $end  shift, and go to state 51


state 13

    1 program: exp .
   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 1 (program)


state 14

    2 exp: varExp .

    $default  reduce using rule 2 (exp)


state 15

    3 exp: nilExp .

    $default  reduce using rule 3 (exp)


state 16

    4 exp: intExp .

    $default  reduce using rule 4 (exp)


state 17

    5 exp: stringExp .

    $default  reduce using rule 5 (exp)


state 18

    6 exp: callExp .

    $default  reduce using rule 6 (exp)


state 19

    7 exp: opExp .

    $default  reduce using rule 7 (exp)


state 20

    8 exp: recordExp .

    $default  reduce using rule 8 (exp)


state 21

    9 exp: seqExp .

    $default  reduce using rule 9 (exp)


state 22

   10 exp: assignExp .

    $default  reduce using rule 10 (exp)


state 23

   11 exp: ifExp .

    $default  reduce using rule 11 (exp)


state 24

   12 exp: whileExp .

    $default  reduce using rule 12 (exp)


state 25

   13 exp: forExp .

    $default  reduce using rule 13 (exp)


state 26

   14 exp: breakExp .

    $default  reduce using rule 14 (exp)


state 27

   15 exp: letExp .

    $default  reduce using rule 15 (exp)


state 28

   16 exp: arrayExp .

    $default  reduce using rule 16 (exp)


state 29

   17 varExp: var .
   35 assignExp: var . ASSIGN exp
   46 var: var . DOT ID
   47    | var . LBRACK exp RBRACK

    LBRACK  shift, and go to state 64
    DOT     shift, and go to state 65
    ASSIGN  shift, and go to state 66

    $default  reduce using rule 17 (varExp)


state 30

   21 callExp: ID LPAREN . argList RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 49 (argList)

    exp        go to state 67
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29
    argList    go to state 68


state 31

   44 arrayExp: ID LBRACK . exp RBRACK OF exp
   48 var: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 69
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 32

   33 recordExp: ID LBRACE . efieldList RBRACE

    ID  shift, and go to state 70

    $default  reduce using rule 52 (efieldList)

    efieldList  go to state 71
    efield      go to state 72


state 33

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   56 expList: exp .
   57        | exp . SEMICOLON expList

    SEMICOLON  shift, and go to state 73
    PLUS       shift, and go to state 52
    MINUS      shift, and go to state 53
    TIMES      shift, and go to state 54
    DIVIDE     shift, and go to state 55
    EQ         shift, and go to state 56
    NEQ        shift, and go to state 57
    LT         shift, and go to state 58
    LE         shift, and go to state 59
    GT         shift, and go to state 60
    GE         shift, and go to state 61
    AND        shift, and go to state 62
    OR         shift, and go to state 63

    $default  reduce using rule 56 (expList)


state 34

   34 seqExp: LPAREN expList . RPAREN

    RPAREN  shift, and go to state 74


state 35

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   32      | MINUS exp .
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 32 (opExp)


state 36

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   36 ifExp: IF exp . THEN exp ELSE exp
   37      | IF exp . THEN exp
   38      | exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    THEN    shift, and go to state 75


state 37

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   40 whileExp: WHILE exp . DO exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    DO      shift, and go to state 76


state 38

   41 forExp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 77


state 39

   72 fundec: FUNCTION . ID LPAREN fieldList RPAREN EQ exp
   73       | FUNCTION . ID LPAREN fieldList RPAREN COLON ID EQ exp

    ID  shift, and go to state 78


state 40

   65 varDec: VAR . ID ASSIGN exp
   66       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 79


state 41

   74 namety: TYPE . ID EQ nameTy
   75       | TYPE . ID EQ recordTy
   76       | TYPE . ID EQ arrayTy

    ID  shift, and go to state 80


state 42

   43 letExp: LET decList . IN expList END

    IN  shift, and go to state 81


state 43

   58 decList: dec .
   59        | dec . decList

    FUNCTION  shift, and go to state 39
    VAR       shift, and go to state 40
    TYPE      shift, and go to state 41

    $default  reduce using rule 58 (decList)

    decList      go to state 82
    dec          go to state 43
    functionDec  go to state 44
    varDec       go to state 45
    typeDec      go to state 46
    fundecList   go to state 47
    nametyList   go to state 48
    fundec       go to state 49
    namety       go to state 50


state 44

   61 dec: functionDec .

    $default  reduce using rule 61 (dec)


state 45

   62 dec: varDec .

    $default  reduce using rule 62 (dec)


state 46

   63 dec: typeDec .

    $default  reduce using rule 63 (dec)


state 47

   64 functionDec: fundecList .

    $default  reduce using rule 64 (functionDec)


state 48

   67 typeDec: nametyList .

    $default  reduce using rule 67 (typeDec)


state 49

   68 fundecList: fundec .
   69           | fundec . fundecList

    FUNCTION  shift, and go to state 39

    FUNCTION  [reduce using rule 68 (fundecList)]
    $default  reduce using rule 68 (fundecList)

    fundecList  go to state 83
    fundec      go to state 49


state 50

   70 nametyList: namety .
   71           | namety . nametyList

    TYPE  shift, and go to state 41

    TYPE      [reduce using rule 70 (nametyList)]
    $default  reduce using rule 70 (nametyList)

    nametyList  go to state 84
    namety      go to state 50


state 51

    0 $accept: program $end .

    $default  accept


state 52

   22 opExp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 85
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 53

   23 opExp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 86
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 54

   24 opExp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 87
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 55

   25 opExp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 88
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 56

   26 opExp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 89
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 57

   27 opExp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 90
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 58

   28 opExp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 91
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 59

   29 opExp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 92
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 60

   30 opExp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 93
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 61

   31 opExp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 94
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 62

   38 ifExp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 95
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 63

   39 ifExp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 96
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 64

   47 var: var LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 97
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 65

   46 var: var DOT . ID

    ID  shift, and go to state 98


state 66

   35 assignExp: var ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 99
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 67

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   50 argList: exp .
   51        | exp . COMMA argList

    COMMA   shift, and go to state 100
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 50 (argList)


state 68

   21 callExp: ID LPAREN argList . RPAREN

    RPAREN  shift, and go to state 101


state 69

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   44 arrayExp: ID LBRACK exp . RBRACK OF exp
   48 var: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 102
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63


state 70

   60 efield: ID . EQ exp

    EQ  shift, and go to state 103


state 71

   33 recordExp: ID LBRACE efieldList . RBRACE

    RBRACE  shift, and go to state 104


state 72

   53 efieldList: efield .
   54           | efield . COMMA efieldList

    COMMA  shift, and go to state 105

    $default  reduce using rule 53 (efieldList)


state 73

   57 expList: exp SEMICOLON . expList

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 55 (expList)

    exp        go to state 33
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29
    expList    go to state 106


state 74

   34 seqExp: LPAREN expList RPAREN .

    $default  reduce using rule 34 (seqExp)


state 75

   36 ifExp: IF exp THEN . exp ELSE exp
   37      | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 107
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 76

   40 whileExp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 108
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 77

   41 forExp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 109
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 78

   72 fundec: FUNCTION ID . LPAREN fieldList RPAREN EQ exp
   73       | FUNCTION ID . LPAREN fieldList RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 110


state 79

   65 varDec: VAR ID . ASSIGN exp
   66       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 111
    ASSIGN  shift, and go to state 112


state 80

   74 namety: TYPE ID . EQ nameTy
   75       | TYPE ID . EQ recordTy
   76       | TYPE ID . EQ arrayTy

    EQ  shift, and go to state 113


state 81

   43 letExp: LET decList IN . expList END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 55 (expList)

    exp        go to state 33
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29
    expList    go to state 114


state 82

   59 decList: dec decList .

    $default  reduce using rule 59 (decList)


state 83

   69 fundecList: fundec fundecList .

    $default  reduce using rule 69 (fundecList)


state 84

   71 nametyList: namety nametyList .

    $default  reduce using rule 71 (nametyList)


state 85

   22 opExp: exp . PLUS exp
   22      | exp PLUS exp .
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 22 (opExp)


state 86

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   23      | exp MINUS exp .
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 23 (opExp)


state 87

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   24      | exp TIMES exp .
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    $default  reduce using rule 24 (opExp)


state 88

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   25      | exp DIVIDE exp .
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    $default  reduce using rule 25 (opExp)


state 89

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   26      | exp EQ exp .
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 26 (opExp)


state 90

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   27      | exp NEQ exp .
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 27 (opExp)


state 91

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   28      | exp LT exp .
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 28 (opExp)


state 92

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   29      | exp LE exp .
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 29 (opExp)


state 93

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   30      | exp GT exp .
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 30 (opExp)


state 94

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   31      | exp GE exp .
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 31 (opExp)


state 95

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   38      | exp AND exp .
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61

    $default  reduce using rule 38 (ifExp)


state 96

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   39      | exp OR exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61

    $default  reduce using rule 39 (ifExp)


state 97

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   47 var: var LBRACK exp . RBRACK

    RBRACK  shift, and go to state 115
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63


state 98

   46 var: var DOT ID .

    $default  reduce using rule 46 (var)


state 99

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   35 assignExp: var ASSIGN exp .
   38 ifExp: exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    PLUS      [reduce using rule 35 (assignExp)]
    MINUS     [reduce using rule 35 (assignExp)]
    TIMES     [reduce using rule 35 (assignExp)]
    DIVIDE    [reduce using rule 35 (assignExp)]
    EQ        [reduce using rule 35 (assignExp)]
    NEQ       [reduce using rule 35 (assignExp)]
    LT        [reduce using rule 35 (assignExp)]
    LE        [reduce using rule 35 (assignExp)]
    GT        [reduce using rule 35 (assignExp)]
    GE        [reduce using rule 35 (assignExp)]
    AND       [reduce using rule 35 (assignExp)]
    OR        [reduce using rule 35 (assignExp)]
    $default  reduce using rule 35 (assignExp)


state 100

   51 argList: exp COMMA . argList

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 49 (argList)

    exp        go to state 67
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29
    argList    go to state 116


state 101

   21 callExp: ID LPAREN argList RPAREN .

    $default  reduce using rule 21 (callExp)


state 102

   44 arrayExp: ID LBRACK exp RBRACK . OF exp
   48 var: ID LBRACK exp RBRACK .

    OF  shift, and go to state 117

    $default  reduce using rule 48 (var)


state 103

   60 efield: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 118
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 104

   33 recordExp: ID LBRACE efieldList RBRACE .

    $default  reduce using rule 33 (recordExp)


state 105

   54 efieldList: efield COMMA . efieldList

    ID  shift, and go to state 70

    $default  reduce using rule 52 (efieldList)

    efieldList  go to state 119
    efield      go to state 72


state 106

   57 expList: exp SEMICOLON expList .

    $default  reduce using rule 57 (expList)


state 107

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   36 ifExp: IF exp THEN exp . ELSE exp
   37      | IF exp THEN exp .
   38      | exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    ELSE    shift, and go to state 120

    PLUS      [reduce using rule 37 (ifExp)]
    MINUS     [reduce using rule 37 (ifExp)]
    TIMES     [reduce using rule 37 (ifExp)]
    DIVIDE    [reduce using rule 37 (ifExp)]
    EQ        [reduce using rule 37 (ifExp)]
    NEQ       [reduce using rule 37 (ifExp)]
    LT        [reduce using rule 37 (ifExp)]
    LE        [reduce using rule 37 (ifExp)]
    GT        [reduce using rule 37 (ifExp)]
    GE        [reduce using rule 37 (ifExp)]
    AND       [reduce using rule 37 (ifExp)]
    OR        [reduce using rule 37 (ifExp)]
    ELSE      [reduce using rule 37 (ifExp)]
    $default  reduce using rule 37 (ifExp)


state 108

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   40 whileExp: WHILE exp DO exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    PLUS      [reduce using rule 40 (whileExp)]
    MINUS     [reduce using rule 40 (whileExp)]
    TIMES     [reduce using rule 40 (whileExp)]
    DIVIDE    [reduce using rule 40 (whileExp)]
    EQ        [reduce using rule 40 (whileExp)]
    NEQ       [reduce using rule 40 (whileExp)]
    LT        [reduce using rule 40 (whileExp)]
    LE        [reduce using rule 40 (whileExp)]
    GT        [reduce using rule 40 (whileExp)]
    GE        [reduce using rule 40 (whileExp)]
    AND       [reduce using rule 40 (whileExp)]
    OR        [reduce using rule 40 (whileExp)]
    $default  reduce using rule 40 (whileExp)


state 109

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   41 forExp: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    TO      shift, and go to state 121


state 110

   72 fundec: FUNCTION ID LPAREN . fieldList RPAREN EQ exp
   73       | FUNCTION ID LPAREN . fieldList RPAREN COLON ID EQ exp

    ID  shift, and go to state 122

    $default  reduce using rule 77 (fieldList)

    fieldList  go to state 123
    field      go to state 124


state 111

   66 varDec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 125


state 112

   65 varDec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 126
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 113

   74 namety: TYPE ID EQ . nameTy
   75       | TYPE ID EQ . recordTy
   76       | TYPE ID EQ . arrayTy

    ID      shift, and go to state 127
    LBRACE  shift, and go to state 128
    ARRAY   shift, and go to state 129

    nameTy    go to state 130
    recordTy  go to state 131
    arrayTy   go to state 132


state 114

   43 letExp: LET decList IN expList . END

    END  shift, and go to state 133


state 115

   47 var: var LBRACK exp RBRACK .

    $default  reduce using rule 47 (var)


state 116

   51 argList: exp COMMA argList .

    $default  reduce using rule 51 (argList)


state 117

   44 arrayExp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 134
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 118

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   60 efield: ID EQ exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 60 (efield)


state 119

   54 efieldList: efield COMMA efieldList .

    $default  reduce using rule 54 (efieldList)


state 120

   36 ifExp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 135
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 121

   41 forExp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 136
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 122

   83 field: ID . COLON ID

    COLON  shift, and go to state 137


state 123

   72 fundec: FUNCTION ID LPAREN fieldList . RPAREN EQ exp
   73       | FUNCTION ID LPAREN fieldList . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 138


state 124

   78 fieldList: field .
   79          | field . COMMA fieldList

    COMMA  shift, and go to state 139

    $default  reduce using rule 78 (fieldList)


state 125

   66 varDec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 140


state 126

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   65 varDec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 65 (varDec)


state 127

   80 nameTy: ID .

    $default  reduce using rule 80 (nameTy)


state 128

   81 recordTy: LBRACE . fieldList RBRACE

    ID  shift, and go to state 122

    $default  reduce using rule 77 (fieldList)

    fieldList  go to state 141
    field      go to state 124


state 129

   82 arrayTy: ARRAY . OF ID

    OF  shift, and go to state 142


state 130

   74 namety: TYPE ID EQ nameTy .

    $default  reduce using rule 74 (namety)


state 131

   75 namety: TYPE ID EQ recordTy .

    $default  reduce using rule 75 (namety)


state 132

   76 namety: TYPE ID EQ arrayTy .

    $default  reduce using rule 76 (namety)


state 133

   43 letExp: LET decList IN expList END .

    $default  reduce using rule 43 (letExp)


state 134

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   44 arrayExp: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    PLUS      [reduce using rule 44 (arrayExp)]
    MINUS     [reduce using rule 44 (arrayExp)]
    TIMES     [reduce using rule 44 (arrayExp)]
    DIVIDE    [reduce using rule 44 (arrayExp)]
    EQ        [reduce using rule 44 (arrayExp)]
    NEQ       [reduce using rule 44 (arrayExp)]
    LT        [reduce using rule 44 (arrayExp)]
    LE        [reduce using rule 44 (arrayExp)]
    GT        [reduce using rule 44 (arrayExp)]
    GE        [reduce using rule 44 (arrayExp)]
    AND       [reduce using rule 44 (arrayExp)]
    OR        [reduce using rule 44 (arrayExp)]
    $default  reduce using rule 44 (arrayExp)


state 135

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   36 ifExp: IF exp THEN exp ELSE exp .
   38      | exp . AND exp
   39      | exp . OR exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    PLUS      [reduce using rule 36 (ifExp)]
    MINUS     [reduce using rule 36 (ifExp)]
    TIMES     [reduce using rule 36 (ifExp)]
    DIVIDE    [reduce using rule 36 (ifExp)]
    EQ        [reduce using rule 36 (ifExp)]
    NEQ       [reduce using rule 36 (ifExp)]
    LT        [reduce using rule 36 (ifExp)]
    LE        [reduce using rule 36 (ifExp)]
    GT        [reduce using rule 36 (ifExp)]
    GE        [reduce using rule 36 (ifExp)]
    AND       [reduce using rule 36 (ifExp)]
    OR        [reduce using rule 36 (ifExp)]
    $default  reduce using rule 36 (ifExp)


state 136

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   41 forExp: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    DO      shift, and go to state 143


state 137

   83 field: ID COLON . ID

    ID  shift, and go to state 144


state 138

   72 fundec: FUNCTION ID LPAREN fieldList RPAREN . EQ exp
   73       | FUNCTION ID LPAREN fieldList RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 145
    EQ     shift, and go to state 146


state 139

   79 fieldList: field COMMA . fieldList

    ID  shift, and go to state 122

    $default  reduce using rule 77 (fieldList)

    fieldList  go to state 147
    field      go to state 124


state 140

   66 varDec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 148
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 141

   81 recordTy: LBRACE fieldList . RBRACE

    RBRACE  shift, and go to state 149


state 142

   82 arrayTy: ARRAY OF . ID

    ID  shift, and go to state 150


state 143

   41 forExp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 151
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 144

   83 field: ID COLON ID .

    $default  reduce using rule 83 (field)


state 145

   73 fundec: FUNCTION ID LPAREN fieldList RPAREN COLON . ID EQ exp

    ID  shift, and go to state 152


state 146

   72 fundec: FUNCTION ID LPAREN fieldList RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 153
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 147

   79 fieldList: field COMMA fieldList .

    $default  reduce using rule 79 (fieldList)


state 148

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   66 varDec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 66 (varDec)


state 149

   81 recordTy: LBRACE fieldList RBRACE .

    $default  reduce using rule 81 (recordTy)


state 150

   82 arrayTy: ARRAY OF ID .

    $default  reduce using rule 82 (arrayTy)


state 151

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   41 forExp: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    PLUS      [reduce using rule 41 (forExp)]
    MINUS     [reduce using rule 41 (forExp)]
    TIMES     [reduce using rule 41 (forExp)]
    DIVIDE    [reduce using rule 41 (forExp)]
    EQ        [reduce using rule 41 (forExp)]
    NEQ       [reduce using rule 41 (forExp)]
    LT        [reduce using rule 41 (forExp)]
    LE        [reduce using rule 41 (forExp)]
    GT        [reduce using rule 41 (forExp)]
    GE        [reduce using rule 41 (forExp)]
    AND       [reduce using rule 41 (forExp)]
    OR        [reduce using rule 41 (forExp)]
    $default  reduce using rule 41 (forExp)


state 152

   73 fundec: FUNCTION ID LPAREN fieldList RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 154


state 153

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   72 fundec: FUNCTION ID LPAREN fieldList RPAREN EQ exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 72 (fundec)


state 154

   73 fundec: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 155
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    var        go to state 29


state 155

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . AND exp
   39      | exp . OR exp
   73 fundec: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 73 (fundec)
